debug.dump(1);
debug.assert(1, 1);
debug.assert(!1, false);
debug.assert(!0, true);
debug.dump(2);
debug.assert(~0, -1);
debug.dump(3);
debug.assert(~1, -2);
debug.assert(1*1,1);
debug.dump(3);
debug.assert(1*2,2);
debug.dump(4);
debug.assert(2*2,4);
debug.assert(1+2*2+1,6);
debug.assert((1+2)*2+2,8);
debug.assert((1+-2)*2,-2);
debug.dump("===========");
debug.dump(2/2*2);
debug.assert(2/2*2,2);
debug.dump("===========");
debug.assert(1+2/2+5*2,12);
debug.dump("===========");
debug.assert((2+2)/2,2);
debug.assert(5%3,2);
debug.assert(1+5%3,3);
debug.assert((1+5)%3,0);
debug.assert(1<<0,1);
debug.assert(1<<1,2);
debug.assert(3<<1,6);
debug.assert(1>>0,1);
debug.assert(1>>1,0);
debug.assert(3>>1,1);
debug.assert(1+2<<1+3,48);
debug.assert(2*1024>>2*3,32);
debug.dump("===========");
debug.assert(1<1,false);
debug.assert(1<0,false);
debug.assert(1<-1,false);
debug.dump("===========");
debug.assert(1<2,true);
debug.assert(1<2<3,true);
debug.dump("===========");
debug.assert(1>1,false);
debug.dump("===========");
debug.assert(2>1,true);
debug.assert(2>1>0,true);
debug.assert(5>3>2,false);
debug.assert(1>=1,true);
debug.assert(1>=2,false);
debug.assert(2>=1,true);
debug.assert(1+3<2+5,true);
debug.assert(1*3+5<2+5,false);
debug.assert(1==1,true);
debug.assert(1==0,false);
debug.assert(1!=0,true);
debug.assert(!!!1,false);
debug.assert(!(1==0),true);
debug.assert(1&&1||2, true);
debug.assert(1&&1||2*0, true);
var x = 0, y, z, q;
debug.dump(3);
debug.assert(x++,0);
debug.dump(5);
debug.assert(++x,2);
debug.dump(6);
debug.assert(x,2);
debug.dump(7);
x = 1;
debug.dump(8);
y = 0;
y+= x += 5;
debug.assert(x, 6);
debug.dump(4);
debug.assert(y, 1);
debug.dump(4);
x = 0;
y = 0 && x++;
debug.assert(y, 0);
debug.assert(x, 0);
debug.dump(5);
y = 1 || x++;
debug.dump(7);
debug.assert(x, 0);
debug.dump(113);
debug.assert(y, 1);
debug.dump(113);
z = 0;
debug.dump(113);
y = x++ && z++;
debug.dump(113);
debug.assert(x,1);
debug.dump(113);
debug.assert(z,0);
y = x++ && z++;
debug.dump(112);
debug.assert(x,2);
debug.assert(z,1);
debug.assert(1 ? 1 : 0, 1);
debug.assert(0 ? 1 : 0, 0);
debug.dump(111);
y = 1;
x = y ? 3 : 5;
debug.assert(x,3);
debug.dump(111);
debug.dump(y);
z = y == 5 ? 3 : 2;
debug.dump(115);
debug.assert(z, 2);
debug.dump(116);
q = z ? 1 + 2 * 12 : 222;
debug.dump(117);
debug.assert(q, 25);
debug.dump(118);
y = 0;
debug.dump(119);
x = 1 ? 2 : y += 2;
debug.dump(120);
debug.assert(x,2);
debug.dump(121);
debug.assert(y, 0);
debug.dump(122);
x = 1 ? 2 : y += 2;
debug.dump(123);
debug.assert(x, 2);
debug.dump(124);
debug.assert(y, 0);
x = 0 ? 2 : (y += 2);
debug.assert(x, 0);
debug.assert(y, 2);
x = 1 ? 2 ? 1 : 3 : 2;
debug.assert(x, 1);
x = ((1+3)*(((((2 + 5)*2)*2)*2)*2));
debug.assert(x, 448);
var qq = 3, ll = (5 + 12);
debug.assert(qq, 3);
debug.assert(ll, 17);
var t1 =3, t2;
t2 = t1;
t2++;
debug.assert(t1,3);
debug.assert(t1,3);
debug.dump("+++++++++++++++++++++++");
var jj = 1;
var yy;

debug.assert(1^1, 0);
debug.assert(1^0, 1);
debug.assert(0^1, 1);
debug.assert(0^0, 0);

var a = 0b1100;
a^=0b1111;
debug.assert(a, 0b0011);

yy = 1 == 1 ? jj++ : 0;
debug.assert(yy, 1);
debug.assert(jj, 2);
debug.assert_cond(1 == true);
debug.assert_cond(1 !== true);

/* SHRZ */
debug.dump("++++++SHRZ +++++++++");

debug.assert(-1 >> 16, -1);
debug.assert(-1 >>> 16, 0xFFFF);

/* toInteger */
debug.assert(toInteger(1), 1);
debug.assert(toInteger("1"), 1);
debug.assert(toInteger(-1), -1);
debug.assert(toInteger("-1"), -1);
debug.assert(toInteger(1.1), 1);
debug.assert(toInteger(1.9), 1);
debug.assert(toInteger(-1.9), -1);
debug.assert(toInteger("-1.9"), -1);

/* Multiple ternary expressions */
debug.assert(0?0:1+0?1:2+3?1:0,1);

/* Large numbers */
debug.assert((1<<30) + 1, 1073741825);
