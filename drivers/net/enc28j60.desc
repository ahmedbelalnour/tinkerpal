PROTOTYPE("ENC28J60", enc28j60, {
})

CONSTRUCTOR("ENC28J60", enc28j60, do_enc28j60_constructor)

FUNCTION("packetRecv", enc28j60, do_enc28j60_packet_recv, {
    .params = {
    },
    .description = "Receive packet data",
    .return_value = "Uint8 array buffer view with the packet data",
    .example = "var e = new ENC28J60(SPI1, GPIO_PE3, GPIO_PF4);\n"
        "e.onPacketReceived(function() { console.log('packet size: ' + "
	"e.packetRecv().length); });\n",
})

FUNCTION("linkStatus", enc28j60, do_enc28j60_link_status, {
    .params = {
    },
    .description = "Get link status",
    .return_value = "'true' if connected, 'false' if disconnected",
    .example = "var e = new ENC28J60(SPI1, GPIO_PE3, GPIO_PF4);\n"
        "console.log('link status: ' + "
	"e.linkStatus ? 'connected' : 'disconnected')\n",
})

FUNCTION("onPortChange", enc28j60, do_enc28j60_on_port_change, {
    .params = {
        { 
	    .name = "cb", 
	    .description = "callback function called when link status has "
	        "changed"
	},
    },
    .description = "Calls 'cb' when link state has changed",
    .return_value = "None",
    .example = "var e = new ENC28J60(SPI1, GPIO_PE3, GPIO_PF4);\n"
        "e.onPortChange(function() { e.print('port state changed!'); });",
})

FUNCTION("onPacketReceived", enc28j60, do_enc28j60_on_packet_received, {
    .params = {
        { 
	    .name = "cb", 
	    .description = "callback function called when packet was received",
	},
    },
    .description = "Calls 'cb' when packet was received",
    .return_value = "None",
    .example = "var e = new ENC28J60(SPI1, GPIO_PE3, GPIO_PF4);\n"
        "e.onPacketReceived(function() { e.print('packet received!'); });",
})
